generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  accounts      Account[]
  sessions      Session[]
  transactions  Transaction[]
  categories    Category[]  // relação com categorias criadas pelo usuário

  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Transaction {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])

  description String
  amount      Float
  type        TransactionType
  method      PaymentMethod
  date        DateTime @default(now())

  personName  String
  personImage String?

  categoryId  String?     // opcional para não quebrar transações antigas
  category    Category?   @relation(fields: [categoryId], references: [id])

  createdAt   DateTime @default(now())
}

model Category {
  id        String        @id @default(cuid())
  userId    String
  user      User          @relation(fields: [userId], references: [id])
  name      String
  color     String?
  createdAt DateTime      @default(now())

  transactions Transaction[]

  @@unique([userId, name])
}

enum TransactionType {
  RECEITA
  DESPESA
}

enum PaymentMethod {
  PIX
  CARTAO_CREDITO
  DINHEIRO
}
